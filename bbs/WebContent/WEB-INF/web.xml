<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>bbs</display-name>
  <!-- 欢迎页 -->
  <welcome-file-list>
    <welcome-file>/pc/jsp/login.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 设置session的过期时间 -->
  <session-config>
	<session-timeout>5</session-timeout>
  </session-config>
  
  <!-- 字符编码过滤 -->
  <filter>
    <filter-name>CharacterFilter</filter-name>
    <filter-class>com.bbs.filter.CharacterFilter</filter-class>
    <init-param>
      <param-name>charset</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <!-- 默认是REQUEST拦截重定向 -->
    <dispatcher>REQUEST</dispatcher>
    <!-- 如果添加了此配置，则会拦截转发，否则不会拦截 -->  
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <!-- 登录状态过滤 -->
  <filter>
    <filter-name>LoginSecureFilter</filter-name>
    <filter-class>com.bbs.filter.LoginSecureFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>LoginSecureFilter</filter-name>
    <!-- 限定范围，否则css、js也将被过滤 -->
    <url-pattern>/pc/jsp/*</url-pattern>
    <url-pattern>*.action</url-pattern>
    <!-- 默认是REQUEST拦截重定向 -->
    <dispatcher>REQUEST</dispatcher>
    <!-- 如果添加了此配置，则会拦截转发，否则不会拦截 -->  
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <!-- strus2核心过滤器配置 -->
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>struts-default.xml,struts-plugin.xml,conf/bbs/struts.xml</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>
  
  <!-- spring配置,ContextLoaderListener监听器的作用就是启动Web容器时，自动装配ApplicationContext的配置信息 --> 
  <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>classpath:conf/bbs/applicationContext.xml</param-value>
  </context-param>
  <listener>
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
</web-app>